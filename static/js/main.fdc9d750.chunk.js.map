{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","onSelectTodo","onSelectUser","className","map","todo","id","title","type","completed","classNames","onClick","userId","TodoFilter","onSelectOption","selectedOption","onHandleQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","Loader","TodoModal","onClose","useState","user","setUser","loadUser","a","loadedUser","useEffect","href","email","name","App","setTodos","setTodoId","setUserId","setSelectedOption","setQuery","selectTodoId","loadTodos","loadedTodos","visibleTodos","filter","lowerQuery","toLowerCase","includes","option","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdc9d750.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  todoId: number,\n  onSelectTodo: (id: number) => void,\n  onSelectUser: (id: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoId,\n  onSelectTodo,\n  onSelectUser,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        todo.id === todoId\n          ? (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"has-background-info-light\"\n            >\n              <td className=\"is-vcentered\">{ todo.id }</td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          )\n          : (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{ todo.id }</td>\n              {!todo.completed && <td className=\"is-vcentered\" />}\n              {todo.completed && (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames('has-text-success', {\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onSelectTodo(todo.id);\n                    onSelectUser(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          )\n      ))}\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","interface Props {\n  onSelectOption: (value: string) => void,\n  onHandleQuery: (value: string) => void,\n  selectedOption: string,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectOption,\n  selectedOption,\n  onHandleQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={(event) => {\n              onSelectOption(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onHandleQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onHandleQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\nexport const getTodo = (userId: number, todoId: number) => get<Todo>(`/users/${userId}/todos/${todoId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo,\n  userId: number,\n  onClose: (id: number) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ userId, todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const loadedUser = await getUser(userId);\n\n    setUser(loadedUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const getTodoById = (id: number) => {\n    return todos.find(todo => todo.id === id) as Todo;\n  };\n\n  const selectTodoId = (id: number) => {\n    setTodoId(id);\n  };\n\n  const selectUserId = (id: number) => {\n    setUserId(id);\n  };\n\n  const loadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  const selectOption = (option: string) => {\n    setSelectedOption(option);\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  let visibleTodos = [...todos];\n\n  if (selectedOption === 'completed') {\n    visibleTodos = visibleTodos.filter(todo => todo.completed);\n  }\n\n  if (selectedOption === 'active') {\n    visibleTodos = visibleTodos.filter(todo => !todo.completed);\n  }\n\n  if (query) {\n    const lowerQuery = query.toLowerCase();\n\n    visibleTodos = visibleTodos.filter(todo => (\n      todo.title.toLowerCase().includes(lowerQuery)));\n  }\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedOption={selectedOption}\n                onSelectOption={selectOption}\n                onHandleQuery={handleQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoId={todoId}\n                    onSelectTodo={selectTodoId}\n                    onSelectUser={selectUserId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          userId={userId}\n          todo={getTodoById(todoId)}\n          onClose={selectTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}